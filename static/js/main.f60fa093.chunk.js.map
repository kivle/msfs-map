{"version":3,"sources":["features/map/mapSlice.js","features/map/msfs/connection.js","features/map/ui/PlaneInfo.js","features/wikipedia/api.js","features/wikipedia/repository.js","utils/throttle.js","features/wikipedia/wikipediaSlice.js","features/map/ui/Wikipedia.js","features/map/UI.js","features/map/layers/Wikipedia.js","features/map/Map.js","App.js","app/store.js","serviceWorker.js","index.js","features/map/ui/Wikipedia.module.css","features/map/ui/PlaneInfo.module.css"],"names":["mapSlice","createSlice","name","initialState","plane","position","undefined","altitude","heading","airspeed","vertical_speed","airspeed_true","flaps","trim","rudder_trim","zoom","reducers","updateMsfs","state","action","msg","payload","latitude","longitude","zoomChanged","actions","connect","dispatch","connectMsfs","callback","url","ws","WebSocket","onmessage","e","JSON","parse","data","onerror","onclose","close","setTimeout","selectPlanePosition","map","selectZoom","selectPlaneInfo","PlaneInfo","useSelector","className","styles","main","InfoField","label","value","style","transform","parseFloat","unit","infoField","instance","edition","queryParams","query","Object","keys","reduce","aggr","key","encodeURIComponent","lat","lng","radius","format","generator","ggslimit","ggsradius","ggscoord","origin","prop","exsentences","exintro","exlimit","pithumbsize","imlimit","this","getWikipediaApiUrl","fetch","resp","json","api","storage","getPagesByGeoLocation","fn","delay","lastCalled","now","Date","getTime","throttle","bind","window","localStorage","wikipediaSlice","currentPage","pages","pagesViewed","addPages","pagesToAdd","a","p","push","filter","text","extract","length","match","coordinates","some","p2","pageid","nextPage","shortestArticle","Math","min","leastInteresting","find","unreadPage","sort","b","v","setEdition","selectEdition","wikipedia","selectPages","selectCurrentPage","Extract","page","Thumbnail","thumbnail","source","src","alt","title","WikipediaPanel","useDispatch","next","useCallback","useEffect","speechSynthesis","decode","striptags","utterance","SpeechSynthesisUtterance","voice","getVoices","onend","speak","cancel","onClick","UI","Wikipedia","c","lon","icon","size","opacity","Map","planePosition","getState","repository","viewportChangedHandler","event","mapCenter","center","onViewportChanged","TileLayer","attribution","App","configureStore","reducer","mapReducer","wikipediaReducer","Boolean","location","hostname","_store","store","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f60fa093.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport connectMsfs from './msfs/connection';\r\n\r\nexport const mapSlice = createSlice({\r\n  name: 'map',\r\n  initialState: {\r\n    plane: {\r\n      position: undefined,\r\n      altitude: 0,\r\n      heading: 0,\r\n      airspeed: 0,\r\n      vertical_speed: 0,\r\n      airspeed_true: 0,\r\n      flaps: 0,\r\n      trim: 0,\r\n      rudder_trim: 0\r\n    },\r\n    zoom: 13\r\n  },\r\n  reducers: {\r\n    updateMsfs: (state, action) => {\r\n      const { msg } = action.payload;\r\n      state.plane.position = [msg.latitude, msg.longitude];\r\n      state.plane.altitude = msg.altitude;\r\n      state.plane.heading = msg.heading;\r\n      state.plane.airspeed = msg.airspeed;\r\n      state.plane.vertical_speed = msg.vertical_speed;\r\n      state.plane.airspeed_true = msg.airspeed_true;\r\n      state.plane.flaps = msg.flaps;\r\n      state.plane.trim = msg.trim;\r\n      state.plane.rudder_trim = msg.rudder_trim;\r\n    },\r\n    zoomChanged: (state, action) => {\r\n      state.zoom = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  updateMsfs,\r\n  zoomChanged\r\n} = mapSlice.actions;\r\n\r\nexport const connect = dispatch => {\r\n  connectMsfs(msg => {\r\n    dispatch(updateMsfs({ msg }));\r\n  });\r\n}\r\n\r\nexport const selectPlanePosition = state => state.map.plane.position;\r\n\r\nexport const selectZoom = state => state.map.zoom;\r\n\r\nexport const selectPlaneInfo = state => ({\r\n  altitude: state.map.plane.altitude,\r\n  heading: state.map.plane.heading,\r\n  airspeed: state.map.plane.airspeed,\r\n  vertical_speed: state.map.plane.vertical_speed,\r\n  airspeed_true: state.map.plane.airspeed_true,\r\n  flaps: state.map.plane.flaps,\r\n  trim: state.map.plane.trim,\r\n  rudder_trim: state.map.plane.rudder_trim\r\n});\r\n\r\nexport default mapSlice.reducer;\r\n","export default function connectMsfs(callback, url = \"ws://localhost:9000/ws\") {\r\n  let ws = new WebSocket(url);\r\n  \r\n  ws.onmessage = function(e) {\r\n    const msg = JSON.parse(e.data);\r\n    if (msg.latitude >= 0 && msg.latitude < 0.015 && msg.longitude >= 0 && msg.longitude < 0.015) {\r\n      // Ignore bad updates from the menu\r\n      return;\r\n    }\r\n    callback(msg);\r\n  };\r\n  \r\n  ws.onerror = function(e) {\r\n    // callback(e);\r\n  };\r\n\r\n  ws.onclose = function(e) {\r\n    // make sure we are closed (probably not needed)\r\n    try { ws.close(); } catch {}\r\n    // retry in 2 seconds\r\n    setTimeout(() => connectMsfs(callback, url), 2000);\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPlaneInfo } from \"../mapSlice\";\r\n\r\nimport { FaPlane } from 'react-icons/fa';\r\nimport styles from './PlaneInfo.module.css';\r\n\r\nexport default function PlaneInfo() {\r\n  const {\r\n    airspeed,\r\n    airspeed_true,\r\n    altitude,\r\n    heading,\r\n    vertical_speed,\r\n    flaps,\r\n    trim,\r\n    rudder_trim\r\n  } = useSelector(selectPlaneInfo);\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n        <InfoField \r\n          label=\"Airspeed\" \r\n          value={`${airspeed} kt (${airspeed_true} kt)`}\r\n        />\r\n        <InfoField \r\n          label=\"Altitude\" \r\n          value={`${altitude} ft`}\r\n        />\r\n        <InfoField \r\n          label=\"Heading\" \r\n          value={<><FaPlane style={{transform: `rotate(${heading - 90}deg)`}} />{` ${heading}°`}</>}\r\n        />\r\n        <InfoField \r\n          label=\"V. speed\" \r\n          value={`${vertical_speed} ft/s`}\r\n        />\r\n        {parseFloat(flaps) !== 0 && <InfoField \r\n          label=\"Flaps\" \r\n          value={`${flaps}`}\r\n        />}\r\n        {parseFloat(trim) !== 0 && <InfoField \r\n          label=\"Trim\" \r\n          value={`${trim}%`}\r\n        />}\r\n        {parseFloat(rudder_trim) !== 0 && <InfoField \r\n          label=\"R.Trim\" \r\n          value={`${rudder_trim}%`}\r\n        />}\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction InfoField({ label, value, unit }) {\r\n  return (\r\n    <span className={styles.infoField}>\r\n      <label>{label}</label>\r\n      <span>{value}</span>\r\n    </span>\r\n  )\r\n}\r\n","class WikipediaApi {\r\n  getWikipediaApiUrl(edition, queryParams) {\r\n    const query = Object.keys(queryParams).reduce(\r\n      (aggr, key) => {\r\n        if (aggr) aggr += '&';\r\n        return `${aggr} ${encodeURIComponent(key)}=${encodeURIComponent(queryParams[key])}`;\r\n      }, ''\r\n    );\r\n\r\n    return `https://${edition}.wikipedia.org/w/api.php?${query}`;\r\n  }\r\n\r\n  async getPagesByGeoLocation(edition, lat, lng, radius) {\r\n    const query = {\r\n      format: 'json',\r\n      action: 'query',\r\n      generator: 'geosearch',\r\n      ggslimit: 20,\r\n      ggsradius: radius,\r\n      ggscoord: lat + '|' + lng,\r\n      origin: '*',\r\n      prop: 'extracts|pageimages|coordinates',\r\n      exsentences: '10',\r\n      exintro: true,\r\n      exlimit: 20,\r\n      pithumbsize: '400',\r\n      imlimit: '10'\r\n    };\r\n    \r\n    const url = this.getWikipediaApiUrl(edition, query);\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n    \r\n    return data;\r\n  }\r\n}\r\n\r\nconst instance = new WikipediaApi();\r\n\r\nexport default instance;\r\n","import api from './api';\r\n\r\nimport { throttle } from '../../utils/throttle';\r\n\r\nclass WikipediaRepository {\r\n  constructor(api, storage) {\r\n    this.api = api;\r\n    this.storage = storage;\r\n    this.getPagesByGeoLocation = throttle(this.getPagesByGeoLocation.bind(this), 10000);\r\n  }\r\n\r\n  async getPagesByGeoLocation(edition, lat, lng, radius) {\r\n    // TODO: Caching\r\n    return await this.api.getPagesByGeoLocation(edition, lat, lng, radius);\r\n  }\r\n}\r\n\r\nconst instance = new WikipediaRepository(api, window.localStorage);\r\n\r\nexport default instance;\r\n","export const throttle = (fn, delay) => {\r\n  let lastCalled = 0;\r\n  return (...args) => {\r\n    let now = new Date().getTime();\r\n    if(now - lastCalled < delay) {\r\n      return;\r\n    }\r\n    lastCalled = now;\r\n    return fn(...args);\r\n  }\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport repository from './repository';\r\n\r\nfunction worthwhile(text) {\r\n  if (!text) return false;\r\n  \r\n  // try to determine if an extract is even worth reading\r\n  return text.length > 100 && (text.match(/\\./g) || []).length > 1;\r\n}\r\n\r\nexport const wikipediaSlice = createSlice({\r\n  name: 'wikipedia',\r\n  initialState: {\r\n    edition: 'en',\r\n    currentPage: undefined,\r\n    pages: [],\r\n    pagesViewed: []\r\n  },\r\n  reducers: {\r\n    addPages: (state, action) => {\r\n      const { data: { query: { pages } = {} } = {} } = action.payload;\r\n      if (!pages) return;\r\n      const geosearch = Object.keys(pages).reduce((a, p) => {\r\n        a.push(pages[p]);\r\n        return a;\r\n      }, []);\r\n      const pagesToAdd = geosearch.filter(\r\n        p => p?.extract?.length > 100 &&\r\n             worthwhile(p?.extract) &&\r\n             p?.coordinates?.length > 0 &&\r\n             !state.pages.some(p2 => p.pageid === p2.pageid) &&\r\n             !state.pagesViewed.some(p2 => p.pageid === p2)\r\n      );\r\n      state.pages.push(...pagesToAdd);\r\n      if (pagesToAdd.length && state.currentPage === undefined) {\r\n        state.currentPage = pagesToAdd[0].pageid;\r\n      }\r\n    },\r\n    nextPage: (state) => {\r\n      if (state.currentPage !== undefined) {\r\n        state.pages = state.pages.filter(p => p.pageid !== state.currentPage);\r\n        state.pagesViewed.push(state.currentPage);\r\n        while (state.pages.length > 10) {\r\n          // Remove least worthwhile articles to not end up with a huge backlog\r\n          const shortestArticle = Math.min(...state.pages.map(p => p.extract.length));\r\n          const leastInteresting = state.pages.find(p => p.extract.length === shortestArticle);\r\n          state.pages = state.pages.filter(p => p.pageid !== leastInteresting.pageid);\r\n        }\r\n      }\r\n      const unreadPage = state.pages\r\n        .sort(\r\n          (a, b) => b?.extract?.length - a?.extract?.length\r\n        ).find(\r\n          p => !state.pagesViewed.some(v => p.pageid === v)\r\n        );\r\n      if (unreadPage) {\r\n        state.currentPage = unreadPage.pageid;\r\n      }\r\n      else {\r\n        state.currentPage = undefined;\r\n      }\r\n    },\r\n    setEdition: (state, action) => {\r\n      const edition = action.payload;\r\n      state.edition = edition;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  addPages,\r\n  nextPage,\r\n  setEdition\r\n} = wikipediaSlice.actions;\r\n\r\nexport const getPages = (lat, lng, radius) => async (dispatch, getState) => {\r\n  const state = getState();\r\n  const edition = selectEdition(state);\r\n  const data = await repository.getPagesByGeoLocation(edition, lat, lng, radius);\r\n  if (data)\r\n    dispatch(addPages({ data }));\r\n};\r\n\r\nexport const selectEdition = (state) => state.wikipedia.edition;\r\n\r\nexport const selectPages = (state) => state.wikipedia.pages;\r\n\r\nexport const selectCurrentPage = (state) => \r\n  state.wikipedia.currentPage && state.wikipedia.pages.find(p => p.pageid === state.wikipedia.currentPage);\r\n\r\nexport default wikipediaSlice.reducer;\r\n","import * as React from 'react';\r\nimport { useCallback, useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport parse from 'html-react-parser';\r\nimport striptags from 'striptags';\r\nimport { decode } from 'entities';\r\n\r\nimport styles from './Wikipedia.module.css';\r\nimport { selectCurrentPage, nextPage } from '../../wikipedia/wikipediaSlice';\r\n\r\nfunction Extract({ page }) {\r\n  return page.extract ? parse(page.extract) : null;\r\n}\r\n\r\nfunction Thumbnail({ page }) {\r\n  return page?.thumbnail?.source\r\n    ? <img src={page.thumbnail.source} alt={page.title} />\r\n    : null;\r\n}\r\n\r\nexport default function WikipediaPanel() {\r\n  const dispatch = useDispatch();\r\n  const page = useSelector(selectCurrentPage);\r\n  const next = useCallback(() => {\r\n    dispatch(nextPage())\r\n  }, [dispatch]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!page || !window.speechSynthesis) return;\r\n      const text = `${page.title}\\n\\n${page.extract ? decode(striptags(page.extract)) : ''}`;\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.voice = window.speechSynthesis.getVoices()[9];\r\n      utterance.onend = () => {\r\n        next();\r\n      };\r\n      window.speechSynthesis.speak(utterance);\r\n      return () => window.speechSynthesis.cancel();\r\n    },\r\n    [page, next]\r\n  );\r\n\r\n  if (!page) return null;\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className={styles.title}>\r\n        <div>{page.title} <button onClick={next}>Next</button></div>\r\n        <Thumbnail page={page} />\r\n      </div>\r\n      <div className={styles.text}>\r\n        <Extract page={page} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport PlaneInfo from './ui/PlaneInfo';\r\nimport Wikipedia from './ui/Wikipedia';\r\n\r\nexport default function UI() {\r\n  return (\r\n    <div>\r\n      <PlaneInfo />\r\n      <Wikipedia />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nimport Marker from \"react-leaflet-enhanced-marker\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaWikipediaW } from \"react-icons/fa\";\r\n\r\nimport { selectCurrentPage, selectPages } from \"../../wikipedia/wikipediaSlice\";\r\n\r\nexport default function Wikipedia() {\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const pages = useSelector(selectPages);\r\n\r\n  return (\r\n    <>\r\n      {pages.map(\r\n        (p) =>\r\n          p &&\r\n          p.coordinates && (\r\n            p.coordinates.map(c =>\r\n                <Marker\r\n                key={p.pageid}\r\n                position={[c.lat, c.lon]}\r\n                icon={\r\n                    <FaWikipediaW\r\n                        size={p.pageid === currentPage.pageid ? 64 : 32}\r\n                        opacity={p.pageid === currentPage.pageid ? 1 : 0.8}\r\n                    />\r\n                }\r\n                />\r\n            )\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Marker from 'react-leaflet-enhanced-marker';\r\n\r\nimport { FaPlane } from 'react-icons/fa';\r\nimport UI from './UI';\r\nimport Wikipedia from \"./layers/Wikipedia\";\r\n\r\nimport { selectPlanePosition, selectPlaneInfo, selectZoom, connect, zoomChanged } from \"./mapSlice\";\r\nimport { getPages } from '../wikipedia/wikipediaSlice';\r\n\r\nexport default function Map() {\r\n  const dispatch = useDispatch();\r\n  const planePosition = useSelector(selectPlanePosition);\r\n  const { heading } = useSelector(selectPlaneInfo);\r\n  const zoom = useSelector(selectZoom);\r\n\r\n  useEffect(() => {\r\n    dispatch(connect);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (planePosition?.length >= 2)\r\n      dispatch(getPages(planePosition[0], planePosition[1], 10000));\r\n  }, [dispatch, planePosition]);\r\n\r\n  const viewportChangedHandler = useCallback((event) => {\r\n    if (event.zoom !== zoom) {\r\n      dispatch(zoomChanged(event.zoom));\r\n    }\r\n  }, [dispatch, zoom]);\r\n\r\n  const plane = <div style={{transform: `rotate(${heading - 90}deg)`}}>\r\n    <FaPlane size={24} />\r\n  </div>;\r\n\r\n  const mapCenter = \r\n    planePosition?.length >= 2 \r\n      ? planePosition \r\n      : [51.505, -0.09];\r\n\r\n  return (\r\n    <>\r\n      <UI />\r\n      <LeafletMap center={mapCenter} zoom={zoom} onViewportChanged={viewportChangedHandler}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Wikipedia />\r\n        {planePosition && <Marker position={planePosition} icon={plane} />}\r\n      </LeafletMap>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Map from './features/map/Map';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Map />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mapReducer from '../features/map/mapSlice';\r\nimport wikipediaReducer from '../features/wikipedia/wikipediaSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    map: mapReducer,\r\n    wikipedia: wikipediaReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet';\r\n\r\nwindow._store = store;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Wikipedia_main__4NWFl\",\"title\":\"Wikipedia_title__QXPcz\",\"text\":\"Wikipedia_text__1Xntm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PlaneInfo_main__9z7SN\",\"infoField\":\"PlaneInfo_infoField__3d4Nw\"};"],"sourceRoot":""}